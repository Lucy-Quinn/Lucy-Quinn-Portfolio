[{"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/index.js":"1","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/App.js":"2","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/reportWebVitals.js":"3","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Navbar/Navbar.js":"4","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Header/Header.js":"5","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/About/About.js":"6","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Portfolio/Portfolio.js":"7","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Education/Education.js":"8","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Contact/Contact.js":"9","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/contexts/ThemeContext.js":"10","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/ThemeToggle/ThemeToggle.js":"11","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Carousel/Carousel.js":"12"},{"size":635,"mtime":1612270667265,"results":"13","hashOfConfig":"14"},{"size":708,"mtime":1611910545650,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611571574689,"results":"16","hashOfConfig":"14"},{"size":5060,"mtime":1612270667253,"results":"17","hashOfConfig":"14"},{"size":2610,"mtime":1612271024160,"results":"18","hashOfConfig":"14"},{"size":1584,"mtime":1612271091883,"results":"19","hashOfConfig":"14"},{"size":1373,"mtime":1612270667257,"results":"20","hashOfConfig":"14"},{"size":2912,"mtime":1612186881339,"results":"21","hashOfConfig":"14"},{"size":5242,"mtime":1612270667240,"results":"22","hashOfConfig":"14"},{"size":832,"mtime":1611910545704,"results":"23","hashOfConfig":"14"},{"size":632,"mtime":1611910545698,"results":"24","hashOfConfig":"14"},{"size":7651,"mtime":1612270667237,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"jjgh7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/index.js",[],["55","56"],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/App.js",[],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/reportWebVitals.js",[],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Navbar/Navbar.js",[],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Header/Header.js",["57"],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/About/About.js",[],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Portfolio/Portfolio.js",["58"],"import React, { useState, useContext } from 'react';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport styled from 'styled-components';\nimport Carousel from './../Carousel/Carousel';\n\n//Styled components\n\nconst Container = styled.div`\n    padding: 5px;\n  background: ${({ isLightTheme, theme }) => isLightTheme ? null : theme.background};\n  padding-bottom: 50px;\n`\n\nconst Div = styled.p`\n  color: ${({ isLightTheme, theme }) => isLightTheme ? theme.primaryColor : theme.div};\n  margin: 50px 0 0 0;\n`\n\nconst Heading = styled.h2`\n  color: ${({ theme }) => theme.primaryColor};\n`\n\nconst Description = styled.p`\n  color: ${({ theme }) => theme.bodyCopy};\n  padding-bottom: 30px;\n`\n\n\nconst Portfolio = () => {\n\n  const { isLightTheme, themes } = useContext(ThemeContext);\n  const theme = isLightTheme ? themes.light : themes.dark;\n\n  return (\n    <Container isLightTheme={isLightTheme} theme={theme} id=\"portfolio\">\n\n      <Div isLightTheme={isLightTheme} theme={theme}>&lt;div&gt;</Div>\n      <Heading theme={theme}>My Portfolio</Heading>\n      <Description theme={theme}>Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit neque, nobis illum quibusdam in sit odit asperiores aliquam sed aut, placeat magni repellendus non, vero dolores. Enim nemo neque quidem.</Description>\n      <Carousel />\n\n    </Container>\n  );\n}\n\nexport default Portfolio;\n","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Education/Education.js",[],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Contact/Contact.js",["59","60","61","62","63","64"],"import React, { useContext } from 'react';\n// import { HashLink as Link } from 'react-router-hash-link';\nimport styled from 'styled-components';\nimport './Contact.css';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport ArrowUpLight from './../../images/button-arrow-up-light.svg';\nimport ArrowUpDark from './../../images/button-arrow-up-dark.svg';\n\nimport SkypeLight from './../../images/skype-light.svg';\nimport SkypeDark from './../../images/skype-dark.svg';\nimport LinkedinLight from './../../images/linkedin-light.svg';\nimport LinkedinDark from './../../images/linkedin-dark.svg';\nimport GithubLight from './../../images/github-light.svg';\nimport GithubDark from './../../images/github-dark.svg';\n\n\n\n//Styled components\n\nconst Icons = styled.div`\n    display: flex;\n    justify-content: space-around;\n    margin: 25px 0 20px 0;\n`\n\nconst ArrowUp = styled.img`\n`\n\nconst Div = styled.p`\n  color: ${({ isLightTheme, theme }) => isLightTheme ? theme.primaryColor : theme.div};\n  margin: 50px 0 0 0;\n`\n\nconst Heading = styled.h2`\n  color: ${({ theme }) => theme.primaryColor};\n`\nconst ContactDetails = styled.h2`\n  color: ${({ theme }) => theme.primaryColor};\n`\n\nconst Tie = styled.p`\n  color: ${({ theme }) => theme.primaryColor};\n`\n\nconst Socials = styled.p`\n  color: ${({ theme }) => theme.primaryColor};\n  margin: 50px 0 0 0;\n`\n\nconst Top = styled.a`\n  margin: 0 0 75px 0;\n  font-weight: 300;\n  & > h4 {\n        font-weight: 300;\n        margin: 5px 0 0 0;\n        color: ${({ theme }) => theme.primaryColor};\n    }\n`\n\nconst Contact = () => {\n    const { isLightTheme, themes } = useContext(ThemeContext);\n    const theme = isLightTheme ? themes.light : themes.dark;\n\n    //Create a link so it is formatted to send an email\n    const Mailto = ({ email, subject = '', body = '', children }) => {\n        let params = subject || body ? '?' : '';\n        if (subject) params += `subject=${encodeURIComponent(subject)}`;\n        if (body) params += `${subject ? '&' : ''}body=${encodeURIComponent(body)}`;\n        return <a href={`mailto:${email}${params}`}>{children}</a>;\n    };\n\n    return (\n        <div style={{\n            padding: '10px',\n            background: `linear-gradient(\n                  180deg\n                  , ${theme.gradientTwo} 0%, ${theme.gradientOne} 100%`\n        }} id=\"contact\">\n            <div>\n                <Div isLightTheme={isLightTheme} theme={theme}>&lt;div&gt;</Div>\n                <Heading theme={theme}>Contact Lucy</Heading>\n                <ContactDetails theme={theme}>+44(0)7894 274 470</ContactDetails>\n                <ContactDetails theme={theme}>+34 634 328 672</ContactDetails>\n                <Mailto theme={theme} email=\"lucy.quinn.uk@gmail.com\" subject=\"Let's Talk\" body=\"Hello world!\"><ContactDetails theme={theme}>lucy.quinn.uk@gmail.com</ContactDetails></Mailto>\n                <Tie theme={theme}>Spanish permanent residency (TIE)</Tie>\n                <Socials theme={theme}>Follow me on socials and GitHub</Socials>\n            </div>\n\n            {/* <Mailto email=\"lucy.quinn.uk@gmail.com\" subject=\"Let's Talk\" body=\"Hello world!\">\n                    <i class=\"fas fa-envelope\"></i>\n                </Mailto> */}\n\n            <div>\n                {isLightTheme ?\n                    (\n                        <Icons>\n                            <a target=\"_blank\" href=\"https://www.linkedin.com/in/lucy-quinn/\">\n                                <img src={LinkedinLight} alt=\"a> of linkedin\" />\n                            </a>\n                            <a target=\"_blank\" href=\"https://github.com/Lucy-Quinn\">\n                                <img src={GithubLight} alt=\"a> of github\" />\n                            </a>\n                            <a target=\"_blank\" href=\"https://www.linkedin.com/in/lucy-quinn/\">\n                                <img src={SkypeLight} alt=\"a> of skype\" />\n\n                            </a>\n                        </Icons>\n                    ) :\n                    (\n                        <Icons>\n\n                            <a target=\"_blank\" href=\"https://www.linkedin.com/in/lucy-quinn/\">\n                                <img src={LinkedinDark} alt=\"a> of linkedin\" />\n                            </a>\n                            <a target=\"_blank\" href=\"https://github.com/Lucy-Quinn\">\n                                <img src={GithubDark} alt=\"a> of github\" />\n                            </a>\n                            <a target=\"_blank\" href=\"https://www.linkedin.com/in/lucy-quinn/\">\n                                <img src={SkypeDark} alt=\"a> of skype\" />\n                            </a>\n                        </Icons>\n                    )\n                }\n\n            </div>\n            <div>\n                <a href=\"#navbar\">\n                    {isLightTheme ?\n                        <ArrowUp src={ArrowUpLight} alt=\"a> of arrow pointing up\"></ArrowUp>\n                        :\n                        <ArrowUp src={ArrowUpDark} alt=\"a> of arrow pointing up\"></ArrowUp>\n                    }\n                </a>\n                <Top theme={theme} href=\"#navbar\">\n                    <h4>Back to top</h4>\n                </Top>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Contact;","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/contexts/ThemeContext.js",["65"],"import React, { createContext, useState } from 'react';\n\nconst ThemeContextProvider = (props) => {\n    const [isLightTheme, setLightTheme] = useState(true);\n    const [themes, setThemes] = useState({\n        light: { primaryColor: '#493d6e', div: '#cec8ff', bodyCopy: '#818181', gradientOne: '#91CCFF', gradientTwo: '#CEC8FF' },\n        dark: { primaryColor: '#FFFFFF', div: '#9fcaff', bodyCopy: '#c6c1cf', gradientOne: '#7576E8', gradientTwo: '#463E84', background: '#181227', languages: '#493d6e' }\n    });\n\n    const toggleTheme = () => {\n        setLightTheme(!isLightTheme);\n    }\n\n    return (\n        <ThemeContext.Provider value={{ themes, isLightTheme, toggleTheme }}>\n            {props.children}\n\n        </ThemeContext.Provider>\n    );\n}\n\nexport const ThemeContext = createContext();\nexport default ThemeContextProvider;","/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/ThemeToggle/ThemeToggle.js",[],"/Users/lucyquinn/Desktop/Coding/Post Ironhack/portfolio/lucy-quinn-portfolio/src/components/Carousel/Carousel.js",["66","67","68","69"],"import React, { useContext, useState } from 'react';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport styled from 'styled-components';\nimport VideoStore from './../../images/the-video-store.png';\nimport SimpleSteps from './../../images/simple-steps.png';\nimport TravelGuru from './../../images/travel-guru.png';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slick from \"react-slick\";\nimport ArrowLeft from './../../images/button-arrow-left.svg'\nimport ArrowRight from './../../images/button-arrow-right.svg'\nimport GithubLight from './../../images/github-light.svg';\nimport GithubDark from './../../images/github-dark.svg';\n\n//Styled components\n//Slick styling\nconst Projects = styled(Slick)`\n.slick-prev {\n    left: 66px;\n    top: 103%;\n}\n\n.slick-next {\n    right: 66px;\n    top: 103%;\n}\n\n.slick-prev:before{\n    width: 46px;\n    height: 46px;\n    left: -13px;\n    top: 16%;\n    content: '' !important;\n    position: absolute;\n    background-image: url(${ArrowLeft});\n    background-repeat: no-repeat;\n    vertical-align: middle;\n    background-size: 46px;\n    opacity: 1 !important;\n}\n\n.slick-next:before{\n    width: 46px;\n    height: 46px;\n    right: -13px;\n    top: 16%;\n    content: '' !important;\n    position: absolute;\n    background-image: url(${ArrowRight});\n    background-repeat: no-repeat;\n    vertical-align: middle;\n    background-size: 46px;\n    opacity: 1 !important;\n}\n\n.slick-dots{\n    bottom: -40px;\n}\n\n.slick-dots li button:before {\n    color: ${({ isLightTheme, theme }) => isLightTheme ? theme.primaryColor : theme.bodyCopy};\n}\n\n.slick-dots li.slick-active button:before {\n    color: ${({ isLightTheme, theme }) => isLightTheme ? theme.primaryColor : theme.div};\n}\n`\n\n//Cards styling\nconst CardContainer = styled.figure`\n    position: relative;\n    display: inline-block;\n    overflow: hidden;\n    margin: 0 auto;\n    min-width: 230px;\n    max-width: 338px;\n    width: 100%;\n    height: 100%;\n    text-align: left;\n    box-shadow: 0px 1px 1px 0px #ccc;\n    & > a{\n        position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    }\n`\nconst Card = styled.div`\n    padding: 0;\n    box-shadow: 0px 1px 1px 0px #ccc;\n    height: 100%;\n`\nconst CardImage = styled.img`\n    width: auto;\n    height: 350px;\n    margin: 0 auto;\n`\nconst CardHeader = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 100%;\n    height: 100px;\n`\nconst CardTitle = styled.h2`\n    width: 59%;\n    color: ${({ theme }) => theme.primaryColor};\n`\n\nconst CardLinks = styled.div`\n    display: flex;\n    left: 200px;\n    bottom: 42px;\n     & > a{\n        margin: 10px;\n        cursor: pointer;  \n    }\n    & > a:first-child{\n        font-size: 1.5rem;\n        color: ${({ theme }) => theme.primaryColor};\n    }\n    & > a > img{\n        height: 28px;\n        width: auto;\n    }\n`\n\nconst CardBody = styled.div`\n    position: relative;\n    display: inline-block;\n    overflow: hidden;\n    text-align: center;\n    max-width: 335px;\n    width: 100%;\n`\n\nconst Description = styled.p`\n    color: ${({ theme }) => theme.bodyCopy};\n`\nconst Languages = styled.p`\n    color: ${({ theme }) => theme.div};\n`\n\nconst projects = [\n    {\n        image: { image: VideoStore },\n        imageAlt: 'sample of the video store project',\n        title: 'The Video Store',\n        text: 'The Video Store will provide you with a selection of those most popular movies. You can favourite the movies, rent them or simply just browse for ideas...',\n        deploy: 'https://lucy-quinn.github.io/The-Video-Store-m1-Project/',\n        github: 'https://github.com/Lucy-Quinn/The-Video-Store-m1-Project',\n        languages: 'HTML5 | CSS3 | JavaScript | Bootstrap | External API'\n    },\n    {\n        image: { image: SimpleSteps },\n        imageAlt: 'sample of the simple steps project',\n        title: 'Simple Steps',\n        text: 'A web app that connects volunteers and charities in Barcelona, which offers two types of users; one to volunteer and one to find volunteers.',\n        deploy: 'https://simple-steps.herokuapp.com/',\n        github: 'https://github.com/Lucy-Quinn/Simple-Steps',\n        languages: 'Server Side Rendering | HTML5 | CSS3 | NodeJS | Express | MongoDB | Mongoose | JSX | Heroku'\n\n    },\n    {\n        image: { image: TravelGuru },\n        imageAlt: 'sample of the travel guru project',\n        title: 'Travel Guru',\n        text: 'A full stack web app with the intention for users to be able to log and keep a record of all of their travel memories and find travel inspiration.',\n        deploy: 'https://travel-guru.herokuapp.com/',\n        github: 'https://github.com/Lucy-Quinn/Client-Travel-Guru',\n        languages: 'ReactJS | MongoDB | Mongoose | Express | CSS3 | HTML5 | Postman | Heroku'\n    },\n]\n\nconst ProjectCard = ({ project }) => {\n    const { imageAlt, title, text, deploy, github, languages } = project;\n    const { image } = project.image;\n    const { isLightTheme, themes } = useContext(ThemeContext);\n    const theme = isLightTheme ? themes.light : themes.dark;\n    return (\n        <CardContainer>\n            <Card>\n                <CardImage src={image} alt={imageAlt}>\n                </CardImage>\n                <CardHeader>\n                    <CardTitle theme={theme}>{title}</CardTitle>\n                    <CardLinks theme={theme}>\n                        <a target=\"_blank\" href={deploy}>\n                            <i className=\"fas fa-external-link-alt\"></i>\n                        </a>\n                        {isLightTheme ?\n                            <a target=\"_blank\" href={github}>\n                                <img src={GithubLight} alt=\"of github\" />\n                            </a>\n                            :\n                            <a target=\"_blank\" href={github}>\n                                <img src={GithubDark} alt=\"of github\" />\n                            </a>\n                        }\n                    </CardLinks>\n                </CardHeader>\n                <CardBody>\n                    <Languages theme={theme}>{languages}</Languages>\n                    <Description theme={theme}>{text}</Description>\n                </CardBody>\n            </Card>\n        </CardContainer>\n    )\n}\n\nconst CarouselContainer = ({ projects }) => {\n    const { isLightTheme, themes } = useContext(ThemeContext);\n    const theme = isLightTheme ? themes.light : themes.dark;\n    const settings = {\n        dots: true,\n        infinite: true,\n        accessibility: true,\n        slidesToShow: 3,\n        arrows: true,\n        slidesToScroll: 1,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1\n                }\n            },\n            {\n                breakpoint: 700,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1\n                }\n            }\n        ]\n    };\n    return (\n        <div>\n            <Projects {...settings} isLightTheme={isLightTheme} theme={theme}>\n                {projects.map((project, index) => {\n                    return (\n                        <div key={index}>\n                            <ProjectCard project={project} />\n                        </div>\n                    );\n                })}\n            </Projects>\n        </div>\n    );\n}\n\nconst Carousel = () => {\n    return (\n        <div className=\"carousel\">\n            <CarouselContainer projects={projects} />\n        </div>\n    );\n}\n\nexport default Carousel;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":10},{"ruleId":"74","severity":1,"message":"78","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":97,"column":29,"nodeType":"81","endLine":97,"endColumn":95},{"ruleId":"79","severity":1,"message":"80","line":100,"column":29,"nodeType":"81","endLine":100,"endColumn":85},{"ruleId":"79","severity":1,"message":"80","line":103,"column":29,"nodeType":"81","endLine":103,"endColumn":95},{"ruleId":"79","severity":1,"message":"80","line":112,"column":29,"nodeType":"81","endLine":112,"endColumn":95},{"ruleId":"79","severity":1,"message":"80","line":115,"column":29,"nodeType":"81","endLine":115,"endColumn":85},{"ruleId":"79","severity":1,"message":"80","line":118,"column":29,"nodeType":"81","endLine":118,"endColumn":95},{"ruleId":"74","severity":1,"message":"82","line":5,"column":20,"nodeType":"76","messageId":"77","endLine":5,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":1,"column":29,"nodeType":"76","messageId":"77","endLine":1,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":191,"column":25,"nodeType":"81","endLine":191,"endColumn":58},{"ruleId":"79","severity":1,"message":"80","line":195,"column":29,"nodeType":"81","endLine":195,"endColumn":62},{"ruleId":"79","severity":1,"message":"80","line":199,"column":29,"nodeType":"81","endLine":199,"endColumn":62},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Uk' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'setThemes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]